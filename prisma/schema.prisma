// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  email     String    @unique
  imageUrl    String?
  password  String
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String  @unique
  description String
  gitLink     String
  liveLink    String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?  @db.ObjectId
}


model PageView {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  visitorId String?  @db.ObjectId
  visitor   Visitor? @relation(fields: [visitorId], references: [id])
}

model Rating {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  value     Float
  createdAt DateTime @default(now())
  visitorId String?  @db.ObjectId
  visitor   Visitor? @relation(fields: [visitorId], references: [id])
}

model Visitor {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress String?
  userAgent String?
  createdAt DateTime   @default(now())
  lastVisit DateTime   @default(now())
  pageViews PageView[]
  ratings   Rating[]
}

model SendMail{
 id           String     @id @default(auto()) @map("_id") @db.ObjectId 
  name         String
  email       String
  subject     String
  message     String
}